trigger: none

pool:
  vmImage: ubuntu-latest

parameters:
  - name: target_env
    values:
      - par-np
      - par-prod

  - name: workspaceName

variables:
  - name: backendServiceAWS
    ${{ if eq( parameters.target_env, 'par-np')}}:
      value: "par-terraform-np"
    ${{ if eq( parameters.target_env, 'par-prod')}}:
      value: "par-terraform-prod"

stages:
  - stage: TerraformInitPlan
    jobs:
    - job: TerraformInitPlan
      steps:
        - task: TerraformInstaller@1
          displayName: 'Install terraform'
          inputs:
            terraformVersion: 'latest'

        - task: TerraformTask@5
          displayName: 'terraform init'
          inputs:
            provider: 'aws'
            command: 'init'
            backendServiceAWS: 'par-terraform-np'
            backendAWSBucketName: 'tod-tf-state-store'
            backendAWSKey: 'terraform.tfstate'
        
        - task: TerraformTask@5
          displayName: terraform workspace
          inputs:
            provider: 'aws'
            command: 'custom'
            outputTo: 'console'
            customCommand: 'workspace new ${{ parameters.workspaceName }}'
            environmentServiceNameAWS: 'par-terraform-np'
        
        - task: TerraformTask@5
          displayName: 'terraform plan'
          inputs:
            provider: 'aws'
            command: 'plan'
            commandOptions: '--var-file=variables.tfvars'
            environmentServiceNameAWS: '${{ variables.backendServiceAWS }}'

        - task: TerraformTask@5
          displayName: 'terraform apply'
          inputs:
            provider: 'aws'
            command: 'apply'
            commandOptions: '--var-file=variables.tfvars'
            environmentServiceNameAWS: '${{ variables.backendServiceAWS }}'
        
        - task: TerraformTask@5
          displayName: terraform workspace
          inputs:
            provider: 'aws'
            command: 'custom'
            outputTo: 'console'
            customCommand: 'workspace select ${{ parameters.workspaceName }}'
            environmentServiceNameAWS: 'par-terraform-np'
          
        - task: TerraformTask@5
          displayName: 'terraform destroy'
          inputs:
            provider: 'aws'
            command: 'destroy'
            commandOptions: '--var-file=variables.tfvars'
            environmentServiceNameAWS: 'par-terraform-np'